{"version":3,"sources":["components/shared-components/Loading/index.js","redux/actions/Clients.js","history.js","components/shared-components/Flex/index.js","configs/EnvironmentConfig.js","configs/AppConfig.js","auth/FetchInterceptor.js","redux/constants/Auth.js","constants/ThemeConstant.js","redux/reducers/Auth.js","redux/reducers/Theme.js","redux/reducers/Clients.js","redux/reducers/index.js","configs/FirebaseConfig.js","auth/FirebaseAuth.js","services/FirebaseService.js","redux/sagas/Auth.js","services/ClientsService.js","redux/sagas/Clients.js","redux/sagas/index.js","redux/store/index.js","components/util-components/IntlMessage/index.js","components/util-components/Icon/index.js","configs/NavigationConfig.js","utils/index.js","components/layout-components/MenuContent.js","components/layout-components/SideNav.js","components/layout-components/TopNav.js","components/layout-components/Logo.js","components/layout-components/MobileNav.js","components/shared-components/ColorPicker/index.js","components/layout-components/NavLanguage.js","components/layout-components/ThemeConfigurator.js","components/layout-components/NavPanel.js","components/layout-components/NavSearch/SearchInput.js","components/layout-components/NavSearch/index.js","components/layout-components/HeaderNav.js","components/layout-components/AppBreadcrumb.js","components/layout-components/PageHeader.js","components/layout-components/Footer.js","views/app-views/index.js","layouts/app-layout/index.js","views/auth-views/index.js","layouts/auth-layout/index.js","lang/entries/en_US.js","lang/entries/zh_CN.js","lang/entries/fr_FR.js","lang/index.js","lang/entries/ja_JP.js","views/index.js","App.js","serviceWorker.js","index.js","redux/constants/Theme.js","redux/constants/Clients.js","redux/actions/Theme.js","redux/actions/Auth.js"],"names":["Icon","_jsx","LoadingOutlined","style","fontSize","spin","Loading","props","align","cover","className","concat","children","Spin","indicator","defaultProps","fetchClientsRequest","type","FETCH_CLIENTS_REQUEST","fetchClientsSuccess","users","FETCH_CLIENTS_SUCCESS","payload","fetchClientsFailure","error","FETCH_CLIENTS_FAILURE","updateClientRequest","user","UPDATE_CLIENT_REQUEST","updateClientSuccess","UPDATE_CLIENT_SUCCESS","updateClientFailure","UPDATE_CLIENT_FAILURE","history","Flex","alignItems","justifyContent","mobileFlex","flexDirection","APP_NAME","API_BASE_URL","API_ENDPOINT_URL","APP_PREFIX_PATH","AUTH_PREFIX_PATH","THEME_CONFIG","navCollapsed","sideNavTheme","SIDE_NAV_LIGHT","locale","navType","NAV_TYPE_SIDE","topNavColor","headerNavColor","mobileNav","currentTheme","service","axios","create","baseURL","timeout","ENTRY_ROUTE","interceptors","request","use","config","jwtToken","localStorage","getItem","AUTH_TOKEN","headers","push","window","location","reload","notification","message","Promise","reject","response","data","notificationParam","status","description","removeItem","SIGNIN","AUTHENTICATED","SIGNOUT","SIGNOUT_SUCCESS","SIGNUP","SIGNUP_SUCCESS","SHOW_AUTH_MESSAGE","HIDE_AUTH_MESSAGE","SHOW_LOADING","SIGNIN_WITH_GOOGLE","SIGNIN_WITH_GOOGLE_AUTHENTICATED","SIGNIN_WITH_FACEBOOK","SIGNIN_WITH_FACEBOOK_AUTHENTICATED","SIDE_NAV_WIDTH","SIDE_NAV_COLLAPSED_WIDTH","SIDE_NAV_DARK","NAV_TYPE_TOP","initState","loading","showMessage","redirect","token","auth","state","arguments","length","undefined","action","initTheme","theme","TOGGLE_COLLAPSED_NAV","SIDE_NAV_STYLE_CHANGE","CHANGE_LOCALE","NAV_TYPE_CHANGE","TOP_NAV_COLOR_CHANGE","HEADER_NAV_COLOR_CHANGE","TOGGLE_MOBILE_NAV","SWITCH_THEME","clients","back","map","client","id","reducers","combineReducers","Theme","Auth","Clients","FirebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","firebaseConfig","firestore","googleAuthProvider","currentUser","GoogleAuthProvider","facebookAuthProvider","FacebookAuthProvider","FirebaseService","TwitterAuthProvider","GithubAuthProvider","async","email","password","signInWithEmailAndPassword","then","catch","err","signInEmailRequest","signOutRequest","signOut","signInGoogleRequest","signInWithPopup","signInFacebookRequest","signUpEmailRequest","createUserWithEmailAndPassword","signInWithFBEmail","takeEvery","_ref","call","put","showAuthMessage","setItem","uid","authenticated","signOutUser","signOutSuccess","signUpWithFBEmail","_ref2","signUpSuccess","signInWithFBGoogle","signInWithGoogleAuthenticated","signInWithFacebook","signInWithFacebookAuthenticated","rootSaga","all","fork","clientsService","fetch","url","method","resolve","setTimeout","fetchClients","takeLatest","getClients","mess","updateClient","getState","sagaMiddleware","createSagaMiddleware","middlewares","store","preloadedState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","configureStore","injectIntl","FormattedMessage","withRef","Component","render","this","_Fragment","React","createElement","navigationConfig","key","path","title","icon","DashboardOutlined","breadcrumb","submenu","Utils","getNameInitial","name","initials","match","shift","pop","toUpperCase","getRouteInfo","navTree","route","p","hasOwnProperty","getColorContrast","hex","hRed","parseInt","cutHex","substring","hGreen","h","hexToG","hBlue","hexToB","charAt","shadeColor","color","percent","R","G","B","RR","toString","GG","BB","rgbaToHex","rgba","trim","str","replace","inParts","indexOf","split","r","g","b","a","parseFloat","toFixed","outParts","Math","round","forEach","part","i","join","getSignNum","number","positive","negative","antdTableSorter","toLowerCase","filterArray","list","value","filter","item","deleteArrayRow","wildCardSearch","input","searchText","getBreakPoint","screens","breakpoints","SubMenu","Menu","useBreakpoint","Grid","setLocale","isLocaleOn","localeKey","IntlMessage","setDefaultOpen","keyList","keyString","arr","index","elm","SideNavContent","routeInfo","hideGroupTitle","localization","onMobileNavToggle","isMobile","utils","includes","closeMobileNav","mode","height","borderRight","defaultSelectedKeys","defaultOpenKeys","menu","ItemGroup","subMenuFirst","subMenuSecond","_jsxs","Item","Link","onClick","to","TopNavContent","backgroundColor","popupClassName","connect","Sider","Layout","width","collapsed","Scrollbars","autoHide","MenuContent","getLogoWidthGutter","isNavTop","mobileLogo","getLogo","logoType","getLogoDisplay","src","alt","onClose","Drawer","placement","closable","visible","bodyStyle","padding","Logo","ArrowLeftOutlined","ColorPicker","colorChange","setVisible","useState","pickerColor","setPickerColor","boxColor","setBoxColor","useEffect","onPickerDropdown","SketchPicker","onChange","rgb","SelectedLanguage","language","lang","langId","getLanguageDetail","langName","maxWidth","DownOutlined","_ref3","onLocaleChange","configDisplay","languageOption","CheckOutlined","Dropdown","overlay","trigger","href","e","preventDefault","GlobalOutlined","colorOptions","ListOption","selector","disabled","vertical","mapDispatchToProps","toggleCollapsedNav","onNavTypeChange","onNavStyleChange","onTopNavColorChange","onHeaderNavColorChange","onSwitchTheme","isCollapse","switcher","themes","useThemeSwitcher","Radio","Group","size","onNavTypeClick","target","Button","Switch","checked","isChecked","changedTheme","NavLanguage","CopyToClipboard","text","configState","JSON","stringify","onCopy","success","CopyOutlined","block","NavPanel","constructor","showDrawer","setState","SettingOutlined","ThemeConfigurator","optionList","getOptionList","navigationTree","optionTree","navItem","getCategoryIcon","category","AppstoreOutlined","AntDesignOutlined","FileTextOutlined","SearchInput","active","close","setValue","options","setOptions","inputRef","useRef","current","focus","AutoComplete","ref","dropdownClassName","onSelect","onSearch","label","filterOption","inputValue","option","Input","placeholder","prefix","SearchOutlined","CloseOutlined","Header","searchActive","setSearchActive","onSearchClose","navMode","MenuUnfoldOutlined","MenuFoldOutlined","NavSearch","breadcrumbData","assignBreadcrumb","obj","BreadcrumbRoute","withRouter","pathSnippets","pathname","buildBreadcrumb","_","slice","Breadcrumb","AppBreadcrumb","PageHeader","display","Footer","Date","getFullYear","AppViews","Suspense","fallback","Route","component","lazy","Redirect","from","memo","Content","AppLayout","currentRouteInfo","isNavSide","HeaderNav","TopNav","SideNav","paddingLeft","MobileNav","AuthLayout","AuthViews","EnLang","antd","antdEnUS","messages","enMsg","ZhLang","antdZhCn","zhMsg","FrLang","antdFrFR","frMsg","AppLocale","en","enLang","zh","zhLang","fr","frLang","ja","antdJaJP","jaMsg","currentAppLocale","IntlProvider","ConfigProvider","exact","dark","process","light","App","Provider","ThemeSwitcherProvider","themeMap","defaultTheme","insertionPoint","Router","Views","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","hideAuthMessage","showLoading"],"mappings":"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","file":"static/js/main.75e84f62.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Spin } from 'antd';\r\nimport PropTypes from 'prop-types'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst Icon = <LoadingOutlined style={{ fontSize: 35 }} spin />\r\n\r\nconst Loading = (props) => {\r\n\tconst { align, cover } = props\r\n\treturn (\r\n\t\t<div className={`loading text-${align} cover-${cover}`}>\r\n\t\t\t<Spin indicator={Icon} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nLoading.propTypes = {\r\n\tsize: PropTypes.string,\r\n\tcover: PropTypes.string\r\n}\r\n\r\nLoading.defaultProps = {\r\n\talign: 'center',\r\n\tcover: 'inline'\r\n};\r\n\r\nexport default Loading","import {\n  FETCH_CLIENTS_REQUEST,\n  FETCH_CLIENTS_SUCCESS,\n  FETCH_CLIENTS_FAILURE,\n  UPDATE_CLIENT_REQUEST,\n  UPDATE_CLIENT_SUCCESS,\n  UPDATE_CLIENT_FAILURE,\n} from \"../constants/Clients\";\n\nexport const fetchClientsRequest = () => ({\n  type: FETCH_CLIENTS_REQUEST,\n});\n\nexport const fetchClientsSuccess = (users) => ({\n  type: FETCH_CLIENTS_SUCCESS,\n  payload: users,\n});\n\nexport const fetchClientsFailure = (error) => ({\n  type: FETCH_CLIENTS_FAILURE,\n  payload: error,\n});\n\nexport const updateClientRequest = (user) => ({\n  type: UPDATE_CLIENT_REQUEST,\n  payload: user,\n});\n\nexport const updateClientSuccess = (user) => ({\n  type: UPDATE_CLIENT_SUCCESS,\n  payload: user,\n});\n\nexport const updateClientFailure = (error) => ({\n  type: UPDATE_CLIENT_FAILURE,\n  payload: error,\n});\n","import * as history from \"history\";\r\n\r\nexport default history.createBrowserHistory();\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: ''\r\n};\r\n\r\n\r\nexport default Flex\r\n","const dev = {\r\n  API_ENDPOINT_URL: \"https://jsonplaceholder.typicode.com\",\r\n};\r\n\r\nconst prod = {\r\n  API_ENDPOINT_URL: \"https://jsonplaceholder.typicode.com\",\r\n};\r\n\r\nconst test = {\r\n  API_ENDPOINT_URL: \"https://jsonplaceholder.typicode.com\",\r\n};\r\n\r\nconst getEnv = () => {\r\n  switch (process.env.NODE_ENV) {\r\n    case \"development\":\r\n      return dev;\r\n    case \"production\":\r\n      return prod;\r\n    case \"test\":\r\n      return test;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport const env = getEnv();\r\n","import { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { env } from './EnvironmentConfig'\r\n\r\nexport const APP_NAME = 'Emilus';\r\nexport const API_BASE_URL = env.API_ENDPOINT_URL\r\nexport const APP_PREFIX_PATH = '/app';\r\nexport const AUTH_PREFIX_PATH = '/auth';\r\n\r\nexport const THEME_CONFIG = {\r\n\tnavCollapsed: false,\r\n\tsideNavTheme: SIDE_NAV_LIGHT,\r\n\tlocale: 'en',\r\n\tnavType: NAV_TYPE_SIDE,\r\n\ttopNavColor: '#3e82f7',\r\n\theaderNavColor: '',\r\n\tmobileNav: false,\r\n\tcurrentTheme: 'light'\r\n};\r\n","import axios from \"axios\";\r\nimport { API_BASE_URL } from \"configs/AppConfig\";\r\nimport history from \"../history\";\r\nimport { AUTH_TOKEN } from \"redux/constants/Auth\";\r\nimport { notification } from \"antd\";\r\n\r\nconst service = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 60000,\r\n});\r\n\r\n// Config\r\nconst ENTRY_ROUTE = \"/auth/login\";\r\nconst TOKEN_PAYLOAD_KEY = \"authorization\";\r\nconst PUBLIC_REQUEST_KEY = \"public-request\";\r\n\r\n// API Request interceptor\r\nservice.interceptors.request.use(\r\n  (config) => {\r\n    const jwtToken = localStorage.getItem(AUTH_TOKEN);\r\n\r\n    if (jwtToken) {\r\n      config.headers[TOKEN_PAYLOAD_KEY] = jwtToken;\r\n    }\r\n\r\n    if (!jwtToken && !config.headers[PUBLIC_REQUEST_KEY]) {\r\n      history.push(ENTRY_ROUTE);\r\n      window.location.reload();\r\n    }\r\n\r\n    return config;\r\n  },\r\n  (error) => {\r\n    // Do something with request error here\r\n    notification.error({\r\n      message: \"Error\",\r\n    });\r\n    Promise.reject(error);\r\n  }\r\n);\r\n\r\n// API respone interceptor\r\nservice.interceptors.response.use(\r\n  (response) => {\r\n    return response.data;\r\n  },\r\n  (error) => {\r\n    let notificationParam = {\r\n      message: \"\",\r\n    };\r\n\r\n    // Remove token and redirect\r\n    if (error.response.status === 400 || error.response.status === 403) {\r\n      notificationParam.message = \"Authentication Fail\";\r\n      notificationParam.description = \"Please login again\";\r\n      localStorage.removeItem(AUTH_TOKEN);\r\n      history.push(ENTRY_ROUTE);\r\n      window.location.reload();\r\n    }\r\n\r\n    if (error.response.status === 404) {\r\n      notificationParam.message = \"Not Found\";\r\n    }\r\n\r\n    if (error.response.status === 500) {\r\n      notificationParam.message = \"Internal Server Error\";\r\n    }\r\n\r\n    if (error.response.status === 508) {\r\n      notificationParam.message = \"Time Out\";\r\n    }\r\n\r\n    notification.error(notificationParam);\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default service;\r\n","export const SIGNIN = 'SIGNIN'; \r\nexport const AUTHENTICATED = 'AUTHENTICATED';\r\nexport const SIGNOUT = 'SIGNOUT';\r\nexport const SIGNOUT_SUCCESS = 'SIGNOUT_SUCCESS'\r\nexport const SIGNUP = 'SIGNUP';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\nexport const SHOW_AUTH_MESSAGE = 'SHOW_AUTH_MESSAGE'\r\nexport const HIDE_AUTH_MESSAGE = 'HIDE_AUTH_MESSAGE'\r\nexport const SHOW_LOADING = 'SHOW_LOADING'\r\nexport const AUTH_TOKEN = 'auth_token'\r\nexport const SIGNIN_WITH_GOOGLE = 'SIGNIN_WITH_GOOGLE'\r\nexport const SIGNIN_WITH_GOOGLE_AUTHENTICATED = 'SIGNIN_WITH_GOOGLE_AUTHENTICATED'\r\nexport const SIGNIN_WITH_FACEBOOK = 'SIGNIN_WITH_FACEBOOK'\r\nexport const SIGNIN_WITH_FACEBOOK_AUTHENTICATED = 'SIGNIN_WITH_FACEBOOK_AUTHENTICATED'","export const ROW_GUTTER = 16;\r\nexport const SIDE_NAV_WIDTH = 250;\r\nexport const SIDE_NAV_COLLAPSED_WIDTH = 80;\r\nexport const SIDE_NAV_LIGHT = 'SIDE_NAV_LIGHT';\r\nexport const SIDE_NAV_DARK = 'SIDE_NAV_DARK';\r\nexport const NAV_TYPE_SIDE = 'SIDE'\r\nexport const NAV_TYPE_TOP = 'TOP'\r\n","import {\r\n\tAUTH_TOKEN,\r\n\tAUTHENTICATED,\r\n\tSHOW_AUTH_MESSAGE,\r\n\tHIDE_AUTH_MESSAGE,\r\n\tSIGNOUT_SUCCESS,\r\n\tSIGNUP_SUCCESS,\r\n\tSHOW_LOADING,\r\n\tSIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nconst initState = {\r\n  loading: false,\r\n  message: '',\r\n  showMessage: false,\r\n  redirect: '',\r\n  token: localStorage.getItem(AUTH_TOKEN),\r\n}\r\n\r\nconst auth = (state = initState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase AUTHENTICATED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\tcase SHOW_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: action.message,\r\n\t\t\t\tshowMessage: true,\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase HIDE_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: '',\r\n\t\t\t\tshowMessage: false,\r\n\t\t\t}\r\n\t\tcase SIGNOUT_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: null,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNUP_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t  ...state,\r\n\t\t\t  loading: false,\r\n\t\t\t  token: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SHOW_LOADING: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_GOOGLE_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_FACEBOOK_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default auth","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  CHANGE_LOCALE,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME\r\n} from '../constants/Theme';\r\nimport { THEME_CONFIG } from 'configs/AppConfig'\r\n\r\nconst initTheme = {\r\n  ...THEME_CONFIG\r\n};\r\n\r\nconst theme = (state = initTheme, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_COLLAPSED_NAV:\r\n      return {\r\n        ...state,\r\n        navCollapsed: action.navCollapsed\r\n      };\r\n    case SIDE_NAV_STYLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        sideNavTheme: action.sideNavTheme\r\n      };\r\n    case CHANGE_LOCALE:\r\n      return {\r\n        ...state,\r\n        locale: action.locale\r\n      };\r\n    case NAV_TYPE_CHANGE:\r\n      return {\r\n        ...state,\r\n        navType: action.navType\r\n      };\r\n    case TOP_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        topNavColor: action.topNavColor\r\n      };\r\n    case HEADER_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        headerNavColor: action.headerNavColor\r\n      };\r\n    case TOGGLE_MOBILE_NAV:\r\n      return {\r\n        ...state,\r\n        mobileNav: action.mobileNav\r\n      };\r\n    case SWITCH_THEME:\r\n      return {\r\n        ...state,\r\n        currentTheme: action.currentTheme\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default theme","import {\n  FETCH_CLIENTS_REQUEST,\n  FETCH_CLIENTS_SUCCESS,\n  FETCH_CLIENTS_FAILURE,\n  UPDATE_CLIENT_REQUEST,\n  UPDATE_CLIENT_SUCCESS,\n  UPDATE_CLIENT_FAILURE,\n} from \"../constants/Clients\";\nimport history from \"../../history\";\n\nconst initState = {\n  clients: [],\n  loading: true,\n  error: null,\n};\n\nconst clients = (state = initState, action) => {\n  switch (action.type) {\n    case FETCH_CLIENTS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    case FETCH_CLIENTS_SUCCESS:\n      return {\n        ...state,\n        clients: action.payload,\n        loading: false,\n        error: null,\n      };\n    case FETCH_CLIENTS_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n\n    case UPDATE_CLIENT_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n\n    case UPDATE_CLIENT_SUCCESS: {\n      history.back();\n      return {\n        ...state,\n        clients: state.clients.map((client) =>\n          client.id === action.payload.id ? action.payload : client\n        ),\n        loading: false,\n        error: null,\n      };\n    }\n    case UPDATE_CLIENT_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default clients;\n","import { combineReducers } from \"redux\";\r\nimport Auth from \"./Auth\";\r\nimport Theme from \"./Theme\";\r\nimport Clients from \"./Clients\";\r\n\r\nconst reducers = combineReducers({\r\n  theme: Theme,\r\n  auth: Auth,\r\n  clients: Clients,\r\n});\r\n\r\nexport default reducers;\r\n","const FirebaseConfig = {\r\n  apiKey: 'AIzaSyAOWoRQGoegkmwnCca7B2GG5GUG_ZP1lcM',\r\n  authDomain: 'emilus.firebaseapp.com',\r\n  databaseURL: 'https://emilus.firebaseio.com',\r\n  projectId: 'emilus',\r\n  storageBucket: 'emilus.appspot.com',\r\n  messagingSenderId: '807555350717',\r\n  appId: '1:807555350717:web:145ba7c21af47203a2f7d4',\r\n  measurementId: 'G-8KE7HJB252'\r\n};\r\n\r\nexport default FirebaseConfig\r\n\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport firebaseConfig from 'configs/FirebaseConfig';\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// firebase utils\r\nconst db = firebase.firestore()\r\nconst auth = firebase.auth();\r\nconst currentUser = auth.currentUser\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\nconst facebookAuthProvider = new firebase.auth.FacebookAuthProvider();\r\nconst twitterAuthProvider = new firebase.auth.TwitterAuthProvider();\r\nconst githubAuthProvider = new firebase.auth.GithubAuthProvider();\r\n\r\nexport {\r\n\tdb,\r\n\tauth,\r\n\tcurrentUser,\r\n\tgoogleAuthProvider,\r\n\tfacebookAuthProvider,\r\n\ttwitterAuthProvider,\r\n\tgithubAuthProvider\r\n};","import { auth, googleAuthProvider, facebookAuthProvider } from 'auth/FirebaseAuth';\r\n\r\nconst FirebaseService = {}\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n\tawait auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n  await auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\t\t\r\nFirebaseService.signOutRequest = async () =>\r\n\tawait auth.signOut().then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInGoogleRequest = async () =>\r\n  await auth.signInWithPopup(googleAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInFacebookRequest = async () =>\r\n  await auth.signInWithPopup(facebookAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signUpEmailRequest = async (email, password) =>\r\n\tawait auth.createUserWithEmailAndPassword(email, password).then(user => user).catch(err => err);\t\r\n\t\r\nexport default FirebaseService","import { all, takeEvery, put, fork, call } from 'redux-saga/effects';\r\nimport {\r\n\tAUTH_TOKEN,\r\n\tSIGNIN,\r\n\tSIGNOUT,\r\n\tSIGNUP,\r\n\tSIGNIN_WITH_GOOGLE,\r\n\tSIGNIN_WITH_FACEBOOK\r\n} from '../constants/Auth';\r\nimport {\r\n\tshowAuthMessage,\r\n\tauthenticated,\r\n\tsignOutSuccess,\r\n\tsignUpSuccess,\r\n\tsignInWithGoogleAuthenticated,\r\n\tsignInWithFacebookAuthenticated\r\n} from \"../actions/Auth\";\r\n\r\nimport FirebaseService from 'services/FirebaseService'\r\n\r\nexport function* signInWithFBEmail() {\r\n  yield takeEvery(SIGNIN, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(authenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signOut() {\r\n  yield takeEvery(SIGNOUT, function* () {\r\n\t\ttry {\r\n\t\t\tconst signOutUser = yield call(FirebaseService.signOutRequest);\r\n\t\t\tif (signOutUser === undefined) {\r\n\t\t\t\tlocalStorage.removeItem(AUTH_TOKEN);\r\n\t\t\t\tyield put(signOutSuccess(signOutUser));\r\n\t\t\t} else {\r\n\t\t\t\tyield put(showAuthMessage(signOutUser.message));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signUpWithFBEmail() {\r\n  yield takeEvery(SIGNUP, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signUpEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signUpSuccess(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t}\r\n\t);\r\n}\r\n\r\nexport function* signInWithFBGoogle() {\r\n  yield takeEvery(SIGNIN_WITH_GOOGLE, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInGoogleRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithGoogleAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signInWithFacebook() {\r\n  yield takeEvery(SIGNIN_WITH_FACEBOOK, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInFacebookRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithFacebookAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n\t\tfork(signInWithFBEmail),\r\n\t\tfork(signOut),\r\n\t\tfork(signUpWithFBEmail),\r\n\t\tfork(signInWithFBGoogle),\r\n\t\tfork(signInWithFacebook)\r\n  ]);\r\n}\r\n","import fetch from \"auth/FetchInterceptor\";\r\n\r\nconst clientsService = {};\r\n\r\nclientsService.getClients = function () {\r\n  return fetch({\r\n    url: \"/users\",\r\n    method: \"GET\",\r\n    headers: {\r\n      \"public-request\": true,\r\n    },\r\n  });\r\n};\r\n\r\nclientsService.updateClient = function (payload) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve(payload);\r\n    }, 1000);\r\n  });\r\n};\r\n\r\nexport default clientsService;\r\n","import { all, put, fork, takeLatest } from \"redux-saga/effects\";\nimport {\n  FETCH_CLIENTS_REQUEST,\n  UPDATE_CLIENT_REQUEST,\n} from \"redux/constants/Clients\";\nimport {\n  fetchClientsSuccess,\n  fetchClientsFailure,\n  updateClientSuccess,\n  updateClientFailure,\n} from \"../actions/Clients\";\nimport clientsService from \"services/ClientsService\";\n\nexport function* fetchClients() {\n  yield takeLatest(FETCH_CLIENTS_REQUEST, function* () {\n    try {\n      const clients = yield clientsService.getClients();\n      yield put(fetchClientsSuccess(clients));\n    } catch (err) {\n      yield put(fetchClientsFailure(err.mess));\n    }\n  });\n}\n\nexport function* updateClient() {\n  yield takeLatest(UPDATE_CLIENT_REQUEST, function* ({ payload }) {\n    try {\n      const user = yield clientsService.updateClient(payload);\n      yield put(updateClientSuccess(user));\n    } catch (err) {\n      yield put(updateClientFailure(err.mess));\n    }\n  });\n}\n\nexport default function* rootSaga() {\n  yield all([fork(fetchClients), fork(updateClient)]);\n}\n","import { all } from \"redux-saga/effects\";\r\nimport Auth from \"./Auth\";\r\nimport Clients from \"./Clients\";\r\n\r\nexport default function* rootSaga(getState) {\r\n  yield all([Auth(), Clients()]);\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducers from \"../reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"../sagas/index\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nfunction configureStore(preloadedState) {\r\n  const composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const store = createStore(\r\n    reducers,\r\n    preloadedState,\r\n    composeEnhancers(applyMiddleware(...middlewares))\r\n  );\r\n\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(\"../reducers/index\", () => {\r\n      const nextRootReducer = require(\"../reducers/index\");\r\n      store.replaceReducer(nextRootReducer);\r\n    });\r\n  }\r\n\r\n  return store;\r\n}\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport {FormattedMessage, injectIntl} from \"react-intl\";\r\n\r\nconst IntlMessage = props => <FormattedMessage {...props} />;\r\nexport default injectIntl(IntlMessage, {\r\n  withRef: false\r\n});\r\n","import React, { Component } from 'react'\r\n\r\nexport class Icon extends Component {\r\n\trender() {\r\n\t\tconst { type, className  } = this.props;\r\n\t\treturn (\r\n\t\t\t<>{React.createElement(type, { className: className })}</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Icon\r\n","import { DashboardOutlined } from \"@ant-design/icons\";\r\nimport { APP_PREFIX_PATH } from \"configs/AppConfig\";\r\n\r\nconst dashBoardNavTree = [\r\n  {\r\n    key: \"main\",\r\n    path: `${APP_PREFIX_PATH}/main`,\r\n    title: \"Основные\",\r\n    icon: DashboardOutlined,\r\n    breadcrumb: false,\r\n    submenu: [\r\n      {\r\n        key: \"catalog\",\r\n        path: `${APP_PREFIX_PATH}/main/catalog`,\r\n        title: \"Каталог\",\r\n        icon: DashboardOutlined,\r\n        breadcrumb: true,\r\n        submenu: [\r\n          {\r\n            key: \"products\",\r\n            path: `${APP_PREFIX_PATH}/main/catalog/products`,\r\n            title: \"Товары\",\r\n            icon: DashboardOutlined,\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: \"categories\",\r\n            path: `${APP_PREFIX_PATH}/main/catalog/categories`,\r\n            title: \"Категории\",\r\n            icon: DashboardOutlined,\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: \"collections\",\r\n            path: `${APP_PREFIX_PATH}/main/catalog/collections`,\r\n            title: \"Коллекции\",\r\n            icon: DashboardOutlined,\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: \"combos\",\r\n            path: `${APP_PREFIX_PATH}/main/catalog/combos`,\r\n            title: \"Комбо\",\r\n            icon: DashboardOutlined,\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        key: \"planner\",\r\n        path: `${APP_PREFIX_PATH}/main/planner`,\r\n        title: \"Планировщик\",\r\n        icon: DashboardOutlined,\r\n        breadcrumb: true,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: \"orders\",\r\n        path: `${APP_PREFIX_PATH}/main/orders`,\r\n        title: \"Заказы\",\r\n        icon: DashboardOutlined,\r\n        breadcrumb: true,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: \"clients\",\r\n        path: `${APP_PREFIX_PATH}/main/clients`,\r\n        title: \"Клиенты\",\r\n        icon: DashboardOutlined,\r\n        breadcrumb: true,\r\n        submenu: [\r\n          {\r\n            key: \"list\",\r\n            path: `${APP_PREFIX_PATH}/main/clients/list`,\r\n            title: \"Список клиентов\",\r\n            icon: DashboardOutlined,\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: \"groups\",\r\n            path: `${APP_PREFIX_PATH}/main/clients/groups`,\r\n            title: \"Группы клиентов\",\r\n            icon: DashboardOutlined,\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        key: \"banners\",\r\n        path: `${APP_PREFIX_PATH}/main/banners`,\r\n        title: \"Баннеры\",\r\n        icon: DashboardOutlined,\r\n        breadcrumb: true,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: \"promo-codes\",\r\n        path: `${APP_PREFIX_PATH}/main/promo-codes`,\r\n        title: \"Промокоды\",\r\n        icon: DashboardOutlined,\r\n        breadcrumb: true,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: \"offline-points\",\r\n        path: `${APP_PREFIX_PATH}/main/offline-points`,\r\n        title: \"Оффлайн точки\",\r\n        icon: DashboardOutlined,\r\n        breadcrumb: true,\r\n        submenu: [\r\n          {\r\n            key: \"addresses\",\r\n            path: `${APP_PREFIX_PATH}/main/offline-points/addresses`,\r\n            title: \"Адреса\",\r\n            icon: DashboardOutlined,\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: \"geo-zones\",\r\n            path: `${APP_PREFIX_PATH}/main/offline-points/geo-zones`,\r\n            title: \"Гео зоны\",\r\n            icon: DashboardOutlined,\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        key: \"employees\",\r\n        path: `${APP_PREFIX_PATH}/main/employees`,\r\n        title: \"Сотрудники\",\r\n        icon: DashboardOutlined,\r\n        breadcrumb: true,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: \"mailing\",\r\n        path: `${APP_PREFIX_PATH}/main/mailing`,\r\n        title: \"Рассылки\",\r\n        icon: DashboardOutlined,\r\n        breadcrumb: true,\r\n        submenu: [],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    key: \"system\",\r\n    path: `${APP_PREFIX_PATH}/system`,\r\n    title: \"Системные\",\r\n    icon: DashboardOutlined,\r\n    breadcrumb: true,\r\n    submenu: [\r\n      {\r\n        key: \"settings\",\r\n        path: `${APP_PREFIX_PATH}/system/settings`,\r\n        title: \"Настройки\",\r\n        icon: DashboardOutlined,\r\n        breadcrumb: true,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: \"mobile-app\",\r\n        path: `${APP_PREFIX_PATH}/system/mobile-app`,\r\n        title: \"Мобильное приложение\",\r\n        icon: DashboardOutlined,\r\n        breadcrumb: true,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: \"logs\",\r\n        path: `${APP_PREFIX_PATH}/system/logs`,\r\n        title: \"Логи\",\r\n        icon: DashboardOutlined,\r\n        breadcrumb: true,\r\n        submenu: [],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst navigationConfig = [...dashBoardNavTree];\r\n\r\nexport default navigationConfig;\r\n","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  return navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t  if( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t  }\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Grid } from \"antd\";\r\nimport IntlMessage from \"../util-components/IntlMessage\";\r\nimport Icon from \"../util-components/Icon\";\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { connect } from \"react-redux\";\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport utils from 'utils'\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (isLocaleOn, localeKey) =>\r\n  isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n  let keyList = [];\r\n  let keyString = \"\";\r\n  if (key) {\r\n    const arr = key.split(\"-\");\r\n    for (let index = 0; index < arr.length; index++) {\r\n      const elm = arr[index];\r\n      index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n      keyList.push(keyString);\r\n    }\r\n  }\r\n  return keyList;\r\n};\r\n\r\nconst SideNavContent = (props) => {\r\n\tconst { sideNavTheme, routeInfo, hideGroupTitle, localization, onMobileNavToggle } = props;\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n\tconst closeMobileNav = () => {\r\n\t\tif (isMobile) {\r\n\t\t\tonMobileNavToggle(false)\r\n\t\t}\r\n\t}\r\n  return (\r\n    <Menu\r\n      theme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\r\n      mode=\"inline\"\r\n      style={{ height: \"100%\", borderRight: 0 }}\r\n      defaultSelectedKeys={[routeInfo?.key]}\r\n      defaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n      className={hideGroupTitle ? \"hide-group-title\" : \"\"}\r\n    >\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <Menu.ItemGroup\r\n            key={menu.key}\r\n            title={setLocale(localization, menu.title)}\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  key={subMenuFirst.key}\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      {subMenuSecond.icon ? (\r\n                        <Icon type={subMenuSecond?.icon} />\r\n                      ) : null}\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link onClick={() => closeMobileNav()} to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? <Icon type={subMenuFirst.icon} /> : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link onClick={() => closeMobileNav()} to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </Menu.ItemGroup>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link onClick={() => closeMobileNav()} to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst TopNavContent = (props) => {\r\n  const { topNavColor, localization } = props;\r\n  return (\r\n    <Menu mode=\"horizontal\" style={{ backgroundColor: topNavColor }}>\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <SubMenu\r\n            key={menu.key}\r\n            popupClassName=\"top-nav-menu\"\r\n            title={\r\n              <span>\r\n                {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n                <span>{setLocale(localization, menu.title)}</span>\r\n              </span>\r\n            }\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  key={subMenuFirst.key}\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? (\r\n                    <Icon type={subMenuFirst?.icon} />\r\n                  ) : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </SubMenu>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n  return props.type === NAV_TYPE_SIDE ? (\r\n    <SideNavContent {...props} />\r\n  ) : (\r\n    <TopNavContent {...props} />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { sideNavTheme, topNavColor } = theme;\r\n  return { sideNavTheme, topNavColor };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MenuContent);\r\n","import React from \"react\";\r\nimport { Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport MenuContent from './MenuContent'\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const SideNav = ({navCollapsed, sideNavTheme, routeInfo, hideGroupTitle, localization = true }) => {\r\n  const props = { sideNavTheme, routeInfo , hideGroupTitle, localization}\r\n  return (\r\n    <Sider \r\n      className={`side-nav ${sideNavTheme === SIDE_NAV_DARK? 'side-nav-dark' : ''}`} \r\n      width={SIDE_NAV_WIDTH} \r\n      collapsed={navCollapsed}\r\n    >\r\n      <Scrollbars autoHide>\r\n        <MenuContent \r\n          type={NAV_TYPE_SIDE} \r\n          {...props}\r\n        />\r\n      </Scrollbars>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme } =  theme;\r\n  return { navCollapsed, sideNavTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideNav);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\nimport MenuContent from './MenuContent'\r\n\r\nexport const TopNav = ({topNavColor, localization = true}) => {\r\n\tconst props = { topNavColor, localization }\r\n\treturn (\r\n\t\t<div className={`top-nav ${utils.getColorContrast(topNavColor)}`} style={{backgroundColor: topNavColor}}>\r\n\t\t\t<div className=\"top-nav-wrapper\">\r\n\t\t\t\t<MenuContent\r\n\t\t\t\t\ttype={NAV_TYPE_TOP} \r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { topNavColor } =  theme;\r\n  return { topNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps)(TopNav);\r\n","import React from 'react'\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_COLLAPSED_WIDTH, NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport { APP_NAME } from 'configs/AppConfig';\r\nimport { connect } from \"react-redux\";\r\nimport utils from 'utils';\r\nimport { Grid } from 'antd';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst getLogoWidthGutter = (props, isMobile) => {\r\n  const { navCollapsed, navType } = props;\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  if(isMobile && !props.mobileLogo) {\r\n    return 0\r\n  }\r\n  if(isNavTop) {\r\n    return 'auto'\r\n  }\r\n  if(navCollapsed) {\r\n    return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n  } else {\r\n    return `${SIDE_NAV_WIDTH}px`\r\n  }\r\n}\r\n\r\nconst getLogo = (props) => {\r\n  const { navCollapsed, logoType } = props;\r\n  if(logoType === 'light') {\r\n    if(navCollapsed) {\r\n      return '/img/logo-sm-white.png'\r\n    }\r\n    return '/img/logo-white.png'\r\n  }\r\n\r\n  if (navCollapsed) {\r\n    return '/img/logo-sm.png'\r\n  }\r\n  return '/img/logo.png'\r\n}\r\n\r\nconst getLogoDisplay = (isMobile, mobileLogo) => {\r\n  if(isMobile && !mobileLogo) {\r\n    return 'd-none'\r\n  } else {\r\n    return 'logo'\r\n  }\r\n}\r\n\r\nexport const Logo = (props) => {\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n  return (\r\n    <div\r\n      className={getLogoDisplay(isMobile, props.mobileLogo)} \r\n      style={{width: `${getLogoWidthGutter(props, isMobile)}`}}>\r\n      <img src={getLogo(props)} alt={`${APP_NAME} logo`}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType } =  theme;\r\n  return { navCollapsed, navType }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Logo);\r\n","import React from \"react\";\r\nimport { Drawer } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport MenuContent from \"./MenuContent\";\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\nimport Logo from \"./Logo\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\n\r\nexport const MobileNav = ({\r\n  sideNavTheme,\r\n  mobileNav,\r\n  onMobileNavToggle,\r\n  routeInfo,\r\n  hideGroupTitle,\r\n  localization = true,\r\n}) => {\r\n  const props = { sideNavTheme, routeInfo, hideGroupTitle, localization };\r\n\r\n  const onClose = () => {\r\n    onMobileNavToggle(false);\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      placement=\"left\"\r\n      closable={false}\r\n      onClose={onClose}\r\n      visible={mobileNav}\r\n      bodyStyle={{ padding: 5 }}\r\n    >\r\n      <Flex flexDirection=\"column\" className=\"h-100\">\r\n        <Flex justifyContent=\"between\" alignItems=\"center\">\r\n          <Logo mobileLogo={true} />\r\n          <div className=\"nav-close\" onClick={() => onClose()}>\r\n            <ArrowLeftOutlined />\r\n          </div>\r\n        </Flex>\r\n        <div className=\"mobile-nav-menu\">\r\n          <Scrollbars autoHide>\r\n            <MenuContent type={NAV_TYPE_SIDE} {...props} />\r\n          </Scrollbars>\r\n        </div>\r\n      </Flex>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme, mobileNav } = theme;\r\n  return { navCollapsed, sideNavTheme, mobileNav };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MobileNav);\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { SketchPicker } from 'react-color';\r\n\r\nconst ColorPicker = props => {\r\n\r\n\tconst { colorChange, color='' } = props\r\n\r\n\tconst [visible, setVisible] = useState(false);\r\n\tconst [pickerColor, setPickerColor] = useState(color)\r\n\tconst [boxColor, setBoxColor] = useState(color)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetBoxColor(color);\r\n\t\tsetPickerColor(color)\r\n\t}, [color]);\r\n\r\n\tconst onPickerDropdown = () => {\r\n\t\tsetVisible(!visible)\r\n\t}\r\n\r\n\tconst onColorChange = (value) => {\r\n\t\tconst {rgb} = value\r\n\t\tconst rgba = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tsetBoxColor(rgba)\r\n\t\tsetPickerColor(rgb)\r\n\t\tcolorChange(value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"color-picker\">\r\n\t\t\t<div className=\"color-picker-dropdown\">\r\n\t\t\t\t<div className=\"color\" style={{backgroundColor: boxColor ? boxColor : '#ffffff'}} onClick={onPickerDropdown} />\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tvisible && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"color-picker-backdrop\" onClick={onPickerDropdown}/>\r\n\t\t\t\t\t\t<SketchPicker color={pickerColor} onChange={onColorChange}/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nColorPicker.propTypes = {\r\n\tcolor: PropTypes.string,\r\n\tcolorChange: PropTypes.func\r\n}\r\n\r\n\r\nexport default ColorPicker;\r\n","import React from \"react\";\r\nimport { CheckOutlined, GlobalOutlined, DownOutlined  } from '@ant-design/icons';\r\nimport { Menu, Dropdown } from \"antd\";\r\nimport lang from \"assets/data/language.data.json\";\r\nimport { connect } from \"react-redux\";\r\nimport { onLocaleChange } from 'redux/actions/Theme'\r\n\r\nfunction getLanguageDetail (locale) {\r\n\tconst data = lang.filter(elm => (elm.langId === locale))\r\n\treturn data[0]\r\n}\r\n\r\nconst SelectedLanguage = ({ locale }) => {\r\n\tconst language = getLanguageDetail(locale)\r\n\tconst {langName, icon} = language\r\n\treturn (\r\n\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${icon}.png`} alt={langName}/>\r\n\t\t\t<span className=\"font-weight-semibold ml-2\">{langName} <DownOutlined className=\"font-size-xs\"/></span>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport const NavLanguage = ({ locale, configDisplay, onLocaleChange }) => {\r\n\tconst languageOption = (\r\n\t\t<Menu>\r\n\t\t\t{\r\n\t\t\t\tlang.map((elm, i) => {return (\r\n\t\t\t\t\t<Menu.Item \r\n\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\tclassName={locale === elm.langId? 'ant-dropdown-menu-item-active': ''} \r\n\t\t\t\t\t\tonClick={() => onLocaleChange(elm.langId)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<span className=\"d-flex justify-content-between align-items-center\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${elm.icon}.png`} alt={elm.langName}/>\r\n\t\t\t\t\t\t\t\t<span className=\"font-weight-normal ml-2\">{elm.langName}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{locale === elm.langId? <CheckOutlined className=\"text-success\" /> : null}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t)})\r\n\t\t\t}\r\n\t\t</Menu>\r\n\t)\r\n\treturn (\r\n\t\t<Dropdown placement=\"bottomRight\" overlay={languageOption} trigger={[\"click\"]}>\r\n\t\t\t{\r\n\t\t\t\tconfigDisplay ?\r\n\t\t\t\t(\r\n\t\t\t\t\t<a href=\"#/\" className=\"text-gray\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t<SelectedLanguage locale={locale}/>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t)\r\n\t\t\t\t:\r\n\t\t\t\t(\r\n\t\t\t\t\t<Menu mode=\"horizontal\">\r\n\t\t\t\t\t\t<Menu.Item>\r\n\t\t\t\t\t\t\t<a href=\"#/\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t\t\t<GlobalOutlined className=\"nav-icon mr-0\" />\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t</Menu>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</Dropdown>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } =  theme;\r\n  return { locale }\r\n};\r\n\r\nexport default connect(mapStateToProps, {onLocaleChange})(NavLanguage);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Radio, Switch, Button, message } from 'antd';\r\nimport { \r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme\r\n} from 'redux/actions/Theme';\r\nimport { CopyOutlined } from '@ant-design/icons';\r\nimport ColorPicker from 'components/shared-components/ColorPicker';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\nimport NavLanguage from './NavLanguage';\r\nimport { \r\n\tSIDE_NAV_LIGHT,\r\n\tNAV_TYPE_SIDE,\r\n\tNAV_TYPE_TOP,\r\n\tSIDE_NAV_DARK\r\n} from 'constants/ThemeConstant';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport utils from 'utils/index';\r\n\r\nconst colorOptions = [\r\n\t'#3e82f7',\r\n\t'#24a772',\r\n\t'#de4436',\r\n\t'#924aca',\r\n\t'#193550'\r\n]\r\n\r\nconst ListOption = ({name, selector, disabled, vertical}) => (\r\n\t<div className={`my-4 ${vertical? '' : 'd-flex align-items-center justify-content-between'}`}>\r\n\t\t<div className={`${disabled ? 'opacity-0-3' : ''} ${vertical? 'mb-3' : ''}`}>{name}</div>\r\n\t\t<div>{selector}</div>\r\n\t</div>\r\n)\r\n\r\nexport const ThemeConfigurator = ({ \r\n\tnavType, \r\n\tsideNavTheme, \r\n\tnavCollapsed,\r\n\ttopNavColor,\r\n\theaderNavColor,\r\n\tlocale,\r\n\tcurrentTheme,\r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange, \r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme\r\n}) => {\r\n\tconst isNavTop = navType === NAV_TYPE_TOP? true : false\r\n\tconst isCollapse = navCollapsed \r\n\r\n\tconst { switcher, themes } = useThemeSwitcher();\r\n\r\n\tconst toggleTheme = (isChecked) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst changedTheme = isChecked ? 'dark' : 'light'\r\n\t\tonSwitchTheme(changedTheme)\r\n    switcher({ theme: themes[changedTheme] });\r\n  };\r\n\r\n\tconst ontopNavColorClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonTopNavColorChange(hex)\r\n\t}\r\n\tconst onHeaderNavColorClick = (value) => {\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonHeaderNavColorChange(hex)\r\n\t}\r\n\r\n\tconst onNavTypeClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tif(value === NAV_TYPE_TOP) {\r\n\t\t\tonTopNavColorChange(colorOptions[0])\r\n\t\t\ttoggleCollapsedNav(false)\r\n\t\t}\r\n\t\tonNavTypeChange(value)\r\n\t}\r\n\r\n\tconst genCopySettingJson = (configState) => JSON.stringify(configState, null, 2);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Navigation</h4>\r\n\t\t\t\t{\r\n\t\t\t\t\tisNavTop ?\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Top Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={topNavColor} colorChange={ontopNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Header Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={headerNavColor} colorChange={onHeaderNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Navigation Type:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group \r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavTypeClick(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={navType}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_SIDE}>Side</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_TOP}>Top</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Side Nav Color:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavStyleChange(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={sideNavTheme}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_LIGHT}>Light</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_DARK}>Dark</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Side Nav Collapse:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch \r\n\t\t\t\t\t\t\tdisabled={isNavTop} \r\n\t\t\t\t\t\t\tchecked={isCollapse} \r\n\t\t\t\t\t\t\tonChange={() => toggleCollapsedNav(!navCollapsed)} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Dark Theme:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch checked={currentTheme === 'dark'} onChange={toggleTheme} />\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Locale</h4>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Language:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<NavLanguage configDisplay/>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<CopyToClipboard\r\n\t\t\t\t\ttext={genCopySettingJson({ navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme})}\r\n\t\t\t\t\tonCopy={() => message.success('Copy Success, please paste it to src/configs/AppConfig.js THEME_CONFIG variable.') }\r\n\t\t\t\t>\r\n\t\t\t\t\t<Button icon={<CopyOutlined /> } block>\r\n\t\t\t\t\t\t<span>Copy Setting</span>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</CopyToClipboard>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme } =  theme;\r\n  return { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\ttoggleCollapsedNav,\r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemeConfigurator)\r\n","import React, { Component } from 'react';\r\nimport { SettingOutlined } from '@ant-design/icons';\r\nimport { Drawer, Menu } from 'antd';\r\nimport ThemeConfigurator from './ThemeConfigurator';\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class NavPanel extends Component {\r\n\tstate = { visible: false };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\t};\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n      <>\r\n        <Menu mode=\"horizontal\">\r\n          <Menu.Item onClick={this.showDrawer}>\r\n            <SettingOutlined className=\"nav-icon mr-0\" />\r\n          </Menu.Item>\r\n        </Menu>\r\n        <Drawer\r\n          title=\"Theme Config\"\r\n          placement=\"right\"\r\n          width={350}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n        >\r\n          <ThemeConfigurator/>\r\n        </Drawer>\r\n      </>\r\n    );\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } =  theme;\r\n  return { locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(NavPanel);","import React, { useState, useRef } from 'react';\r\nimport { \r\n\tDashboardOutlined,\r\n\tAppstoreOutlined,\r\n\tAntDesignOutlined,\r\n\tFileTextOutlined,\r\n\tSearchOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport { AutoComplete, Input } from 'antd';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\n\r\nfunction getOptionList (navigationTree, optionTree) {\r\n\toptionTree = optionTree ? optionTree : [];\r\n\tfor ( const navItem of navigationTree ) {\r\n\t\tif(navItem.submenu.length === 0) {\r\n\t\t\toptionTree.push(navItem)\r\n\t\t}\r\n\t\tif(navItem.submenu.length > 0) {\r\n\t\t\tgetOptionList(navItem.submenu, optionTree);\r\n\t\t}\r\n\t}\r\n\treturn optionTree \r\n}\r\n\r\nconst optionList = getOptionList(navigationConfig)\r\n\r\nconst getCategoryIcon = category => {\r\n\tswitch (category) {\r\n\t\tcase 'dashboards':\r\n\t\t\treturn <DashboardOutlined className=\"text-success\"/>;\r\n\t\tcase 'apps':\r\n\t\t\treturn <AppstoreOutlined className=\"text-danger\"/>;\r\n\t\tcase 'components':\r\n\t\t\treturn <AntDesignOutlined className=\"text-primary\"/>;\r\n\t\tcase 'extra':\r\n\t\t\treturn <FileTextOutlined className=\"text-warning\"/>;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst searchResult = () => optionList.map((item) => {\r\n\tconst category = item.key.split('-')[0]\r\n\treturn {\r\n\t\tvalue: item.path,\r\n\t\tlabel: (\r\n\t\t\t<Link to={item.path}>\r\n\t\t\t\t<div className=\"search-list-item\">\r\n\t\t\t\t\t<div className=\"icon\">\r\n\t\t\t\t\t\t{getCategoryIcon(category)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"font-weight-semibold\"><IntlMessage id={item.title} /></div>\r\n\t\t\t\t\t\t<div className=\"font-size-sm text-muted\">{category} </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t),\r\n\t};\r\n});\r\n\r\nconst SearchInput = props => {\r\n\tconst { active, close, isMobile, mode } = props\r\n\tconst [value, setValue] = useState('');\r\n\tconst [options, setOptions] = useState([])\r\n\tconst inputRef = useRef(null);\r\n\r\n\tconst onSelect = () => {\r\n\t\tsetValue('')\r\n\t\tsetOptions([])\r\n\t\tif(close) {\r\n\t\t\tclose()\r\n\t\t}\r\n  };\r\n\r\n\tconst onSearch = searchText => {\r\n\t\tsetValue(searchText)\r\n\t\tsetOptions(!searchText ? [] : searchResult(searchText))\r\n\t};\r\n\t\r\n\tconst autofocus = () => {\r\n\t\tinputRef.current.focus();\r\n\t}\r\n\r\n\tif(active) {\r\n\t\tautofocus()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AutoComplete\r\n\t\t\tref={inputRef} \r\n\t\t\tclassName={`nav-search-input ${isMobile? 'is-mobile' : ''} ${mode === 'light' ? 'light' : ''}`}\r\n\t\t\tdropdownClassName=\"nav-search-dropdown\"\r\n\t\t\toptions={options}\r\n\t\t\tonSelect={onSelect}\r\n\t\t\tonSearch={onSearch}\r\n\t\t\tvalue={value}\r\n\t\t\tfilterOption={(inputValue, option) => \r\n\t\t\t\toption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Input placeholder=\"Search...\"  prefix={<SearchOutlined className=\"mr-0\" />} />\r\n\t\t</AutoComplete>\r\n\t)\r\n}\r\n\r\nexport default SearchInput\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n\tCloseOutlined,\r\n} from '@ant-design/icons';\r\nimport utils from 'utils'\r\nimport SearchInput from './SearchInput';\r\n\r\nexport const NavSearch = (props) => {\r\n\tconst { active, close, headerNavColor } = props\r\n\tconst mode = utils.getColorContrast(headerNavColor)\r\n\r\n\treturn (\r\n\t\t<div className={`nav-search ${active ? 'nav-search-active' : ''} ${mode}`} style={{backgroundColor: headerNavColor}}>\r\n\t\t\t<div className=\"d-flex align-items-center w-100\">\r\n\t\t\t\t<SearchInput close={close} active={active}/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"nav-close\" onClick={close}>\r\n\t\t\t\t<CloseOutlined />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { headerNavColor } =  theme;\r\n  return { headerNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(NavSearch)","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Layout } from \"antd\";\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from '@ant-design/icons';\r\nimport Logo from './Logo';\r\nimport NavPanel from './NavPanel';\r\nimport NavSearch  from './NavSearch';\r\nimport { toggleCollapsedNav, onMobileNavToggle } from 'redux/actions/Theme';\r\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderNav = props => {\r\n  const { navCollapsed, mobileNav, navType, headerNavColor, toggleCollapsedNav, onMobileNavToggle, isMobile, currentTheme } = props;\r\n  const [searchActive, setSearchActive] = useState(false)\r\n\r\n  const onSearchClose = () => {\r\n    setSearchActive(false)\r\n  }\r\n\r\n  const onToggle = () => {\r\n    if(!isMobile) {\r\n      toggleCollapsedNav(!navCollapsed)\r\n    } else {\r\n      onMobileNavToggle(!mobileNav)\r\n    }\r\n  }\r\n\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  const mode = ()=> {\r\n    if(!headerNavColor) {\r\n      return utils.getColorContrast(currentTheme === 'dark' ? '#00000' : '#ffffff' )\r\n    }\r\n    return utils.getColorContrast(headerNavColor)\r\n  }\r\n  const navMode = mode()\r\n  const getNavWidth = () => {\r\n    if(isNavTop || isMobile) {\r\n      return '0px'\r\n    }\r\n    if(navCollapsed) {\r\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n    } else {\r\n      return `${SIDE_NAV_WIDTH}px`\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!isMobile) {\r\n      onSearchClose()\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Header className={`app-header ${navMode}`} style={{backgroundColor: headerNavColor}}>\r\n      <div className={`app-header-wrapper ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n        <Logo logoType={navMode}/>\r\n        <div className=\"nav\" style={{width: `calc(100% - ${getNavWidth()})`}}>\r\n          <div className=\"nav-left\">\r\n            <ul className=\"ant-menu ant-menu-root ant-menu-horizontal\">          \r\n              {\r\n                isNavTop && !isMobile ?\r\n                null\r\n                :\r\n                <li className=\"ant-menu-item ant-menu-item-only-child\" onClick={() => {onToggle()}}>\r\n                  {navCollapsed || isMobile ? <MenuUnfoldOutlined className=\"nav-icon\" /> : <MenuFoldOutlined className=\"nav-icon\" />}\r\n                </li>\r\n              }\r\n            </ul>\r\n          </div>\r\n          <div className=\"nav-right\">\r\n            <NavPanel />\r\n          </div>\r\n          <NavSearch active={searchActive} close={onSearchClose}/>\r\n        </div>\r\n      </div>\r\n    </Header>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, headerNavColor, mobileNav, currentTheme } =  theme;\r\n  return { navCollapsed, navType, headerNavColor, mobileNav, currentTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps, {toggleCollapsedNav, onMobileNavToggle})(HeaderNav);","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Breadcrumb } from 'antd';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\n\r\nlet breadcrumbData = { \r\n\t'/app' : <IntlMessage id=\"home\" />\r\n};\r\n\r\nnavigationConfig.forEach((elm, i) => {\r\n\tconst assignBreadcrumb = (obj) => breadcrumbData[obj.path] = <IntlMessage id={obj.title} />;\r\n\tassignBreadcrumb(elm);\r\n\tif (elm.submenu) {\r\n\t\telm.submenu.forEach( elm => {\r\n\t\t\tassignBreadcrumb(elm)\r\n\t\t\tif(elm.submenu) {\r\n\t\t\t\telm.submenu.forEach( elm => {\r\n\t\t\t\t\tassignBreadcrumb(elm)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n})\r\n\r\nconst BreadcrumbRoute = withRouter(props => {\r\n\tconst { location } = props;\r\n\tconst pathSnippets = location.pathname.split('/').filter(i => i);\r\n\tconst buildBreadcrumb = pathSnippets.map((_, index) => {\r\n    const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n    return (\r\n      <Breadcrumb.Item key={url}>\r\n        <Link to={url}>{breadcrumbData[url]}</Link>\r\n      </Breadcrumb.Item>\r\n    );\r\n\t});\r\n  \r\n  return (\r\n\t\t<Breadcrumb>\r\n\t\t\t{buildBreadcrumb}\r\n\t\t</Breadcrumb>\r\n  );\r\n});\r\n\r\nexport class AppBreadcrumb extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<BreadcrumbRoute />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AppBreadcrumb\r\n","import React from 'react'\r\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\n\r\nexport const PageHeader = ({ title, display }) => {\r\n\treturn (\r\n\t\tdisplay ? (\r\n\t\t\t<div className=\"app-page-header\">\r\n\t\t\t\t<h3 className=\"mb-0 mr-3 font-weight-semibold\">\r\n\t\t\t\t\t<IntlMessage id={title? title : 'home'}/>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<AppBreadcrumb />\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t: null\r\n\t)\r\n}\r\n\r\nexport default PageHeader","import React from 'react'\r\nimport { APP_NAME } from 'configs/AppConfig';\r\n\r\nexport default function Footer() {\r\n\treturn (\r\n\t\t<footer className=\"footer\">\r\n\t\t\t<span>Copyright  &copy;  {`${new Date().getFullYear()}`} <span className=\"font-weight-semibold\">{`${APP_NAME}`}</span> All rights reserved.</span>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from \"components/shared-components/Loading\";\r\nimport { APP_PREFIX_PATH } from \"configs/AppConfig\";\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"content\" />}>\r\n      <Switch>\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/home`}\r\n          component={lazy(() => import(\"./home/\"))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/main/clients/list`}\r\n          component={lazy(() => import(\"./home/main/clients/list\"))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/main/planner`}\r\n          component={lazy(() => import(\"./home/main/planner\"))}\r\n        />\r\n        <Redirect from={`${APP_PREFIX_PATH}`} to={`${APP_PREFIX_PATH}/home`} />\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default React.memo(AppViews);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SideNav from 'components/layout-components/SideNav';\r\nimport TopNav from 'components/layout-components/TopNav';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport MobileNav from 'components/layout-components/MobileNav'\r\nimport HeaderNav from 'components/layout-components/HeaderNav';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport Footer from 'components/layout-components/Footer';\r\nimport AppViews from 'views/app-views';\r\nimport {\r\n  Layout,\r\n  Grid,\r\n} from \"antd\";\r\n\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { \r\n  SIDE_NAV_WIDTH, \r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_SIDE,\r\n  NAV_TYPE_TOP\r\n} from 'constants/ThemeConstant';\r\nimport utils from 'utils';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, location }) => {\r\n  const currentRouteInfo = utils.getRouteInfo(navigationConfig, location.pathname)\r\n  const screens = utils.getBreakPoint(useBreakpoint());\r\n  const isMobile = !screens.includes('lg')\r\n  const isNavSide = navType === NAV_TYPE_SIDE\r\n  const isNavTop = navType === NAV_TYPE_TOP\r\n  const getLayoutGutter = () => {\r\n    if(isNavTop || isMobile) {\r\n      return 0\r\n    }\r\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH\r\n  }\r\n\r\n  const { status } = useThemeSwitcher();\r\n\r\n  if (status === 'loading') {\r\n    return <Loading cover=\"page\" />;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <HeaderNav isMobile={isMobile}/>\r\n      {(isNavTop && !isMobile) ? <TopNav routeInfo={currentRouteInfo}/> : null}\r\n      <Layout className=\"app-container\">\r\n        {(isNavSide && !isMobile) ? <SideNav routeInfo={currentRouteInfo}/> : null }\r\n        <Layout className=\"app-layout\" style={{paddingLeft: getLayoutGutter()}}>\r\n          <div className={`app-content ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n            <PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title} />\r\n            <Content>\r\n              <AppViews />\r\n            </Content>\r\n          </div>\r\n          <Footer />\r\n        </Layout>\r\n      </Layout>\r\n      {isMobile && <MobileNav />}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, locale } =  theme;\r\n  return { navCollapsed, navType, locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"page\"/>}>\r\n      <Switch>\r\n        <Route path={`${AUTH_PREFIX_PATH}/login`} component={lazy(() => import(`./authentication/login`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-1`} component={lazy(() => import(`./authentication/login-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-2`} component={lazy(() => import(`./authentication/login-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-1`} component={lazy(() => import(`./authentication/register-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-2`} component={lazy(() => import(`./authentication/register-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/forgot-password`} component={lazy(() => import(`./authentication/forgot-password`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-1`} component={lazy(() => import(`./errors/error-page-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-2`} component={lazy(() => import(`./errors/error-page-2`))} />\r\n        <Redirect from={`${AUTH_PREFIX_PATH}`} to={`${AUTH_PREFIX_PATH}/login`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default AppViews;\r\n\r\n","import React from 'react'\r\nimport { Switch, Route, } from \"react-router-dom\";\r\nimport AuthViews from 'views/auth-views'\r\n\r\nexport const AuthLayout = () => {\r\n\treturn (\r\n\t\t<div className=\"auth-container\">\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"\" component={AuthViews} />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default AuthLayout\r\n","import antdEnUS from 'antd/es/locale/en_US';\r\nimport enMsg from \"../locales/en_US.json\";\r\n\r\nconst EnLang = {\r\n  antd: antdEnUS,\r\n  locale: 'en-US',\r\n  messages: {\r\n    ...enMsg\r\n  },\r\n};\r\nexport default EnLang;\r\n","import antdZhCn from 'antd/es/locale/zh_CN';\r\nimport zhMsg from \"../locales/zh_CN.json\";\r\n\r\nconst ZhLang = {\r\n  antd: antdZhCn,\r\n  locale: 'zh',\r\n  messages: {\r\n    ...zhMsg\r\n  },\r\n};\r\nexport default ZhLang;\r\n","import antdFrFR from 'antd/es/locale/fr_FR';\r\nimport frMsg from \"../locales/fr_FR.json\";\r\n\r\nconst FrLang = {\r\n  antd: antdFrFR,\r\n  locale: 'fr-FR',\r\n  messages: {\r\n    ...frMsg\r\n  },\r\n};\r\nexport default FrLang;\r\n","import enLang from './entries/en_US';\r\nimport zhLang from './entries/zh_CN';\r\nimport frLang from './entries/fr_FR';\r\nimport jaLang from './entries/ja_JP'\r\n\r\nconst AppLocale = {\r\n    en: enLang,\r\n    zh: zhLang,\r\n    fr: frLang,\r\n    ja: jaLang\r\n};\r\n\r\nexport default AppLocale;","import antdJaJP from 'antd/es/locale/ja_JP';\r\nimport jaMsg from \"../locales/ja_JP.json\";\r\n\r\nconst JaLang = {\r\n  antd: antdJaJP,\r\n  locale: 'ja-JP',\r\n  messages: {\r\n    ...jaMsg\r\n  },\r\n};\r\nexport default JaLang;\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport AppLayout from \"layouts/app-layout\";\r\nimport AuthLayout from 'layouts/auth-layout';\r\nimport AppLocale from \"lang\";\r\nimport { IntlProvider } from \"react-intl\";\r\nimport { ConfigProvider } from 'antd';\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const Views = (props) => {\r\n  const { locale, location } = props;\r\n  const currentAppLocale = AppLocale[locale];\r\n  return (\r\n    <IntlProvider\r\n      locale={currentAppLocale.locale}\r\n      messages={currentAppLocale.messages}>\r\n      <ConfigProvider locale={currentAppLocale.antd}>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={APP_PREFIX_PATH} />\r\n          </Route>\r\n          <Route path={AUTH_PREFIX_PATH}>\r\n            <AuthLayout />\r\n          </Route>\r\n          <Route path={APP_PREFIX_PATH}>\r\n            <AppLayout location={location}/>\r\n          </Route>\r\n        </Switch>\r\n      </ConfigProvider>\r\n    </IntlProvider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme, auth }) => {\r\n  const { locale } =  theme;\r\n  const { token } = auth;\r\n  return { locale, token }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(Views));","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Views from './views';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\r\nimport { THEME_CONFIG } from './configs/AppConfig';\r\n\r\nconst themes = {\r\n  dark: `${process.env.PUBLIC_URL}/css/dark-theme.css`,\r\n  light: `${process.env.PUBLIC_URL}/css/light-theme.css`,\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        <ThemeSwitcherProvider themeMap={themes} defaultTheme={THEME_CONFIG.currentTheme} insertionPoint=\"styles-insertion-point\">\r\n          <Router>\r\n            <Switch>\r\n              <Route path=\"/\" component={Views}/>\r\n            </Switch>\r\n          </Router>\r\n        </ThemeSwitcherProvider>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export const TOGGLE_COLLAPSED_NAV = 'TOGGLE_COLLAPSED_NAV';\r\nexport const CHANGE_LOCALE = 'CHANGE_LOCALE';\r\nexport const SIDE_NAV_STYLE_CHANGE = 'SIDE_NAV_STYLE_CHANGE';\r\nexport const NAV_TYPE_CHANGE = 'NAV_TYPE_CHANGE';\r\nexport const TOP_NAV_COLOR_CHANGE = 'TOP_NAV_COLOR_CHANGE';\r\nexport const HEADER_NAV_COLOR_CHANGE = 'HEADER_NAV_COLOR_CHANGE';\r\nexport const TOGGLE_MOBILE_NAV = 'TOGGLE_MOBILE_NAV';\r\nexport const SWITCH_THEME = 'SWITCH_THEME';","export const FETCH_CLIENTS_REQUEST = \"FETCH_CLIENTS_REQUEST\";\nexport const FETCH_CLIENTS_SUCCESS = \"FETCH_CLIENTS_SUCCESS\";\nexport const FETCH_CLIENTS_FAILURE = \"FETCH_CLIENTS_FAILURE\";\n\nexport const UPDATE_CLIENT_REQUEST = \"UPDATE_CLIENT_REQUEST\";\nexport const UPDATE_CLIENT_SUCCESS = \"UPDATE_CLIENT_SUCCESS\";\nexport const UPDATE_CLIENT_FAILURE = \"UPDATE_CLIENT_FAILURE\";\n","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  CHANGE_LOCALE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME\r\n} from '../constants/Theme';\r\n\r\nexport function toggleCollapsedNav(navCollapsed) {\r\n  return {\r\n    type: TOGGLE_COLLAPSED_NAV,\r\n    navCollapsed\r\n  };\r\n}\r\n\r\nexport function onNavStyleChange(sideNavTheme) {\r\n  return {\r\n    type: SIDE_NAV_STYLE_CHANGE,\r\n    sideNavTheme\r\n  };\r\n}\r\n\r\nexport function onLocaleChange(locale) {\r\n  return {\r\n    type: CHANGE_LOCALE,\r\n    locale\r\n  };\r\n}\r\n\r\nexport function onNavTypeChange(navType) {\r\n  return {\r\n    type: NAV_TYPE_CHANGE,\r\n    navType\r\n  };\r\n}\r\n\r\nexport function onTopNavColorChange(topNavColor) {\r\n  return {\r\n    type: TOP_NAV_COLOR_CHANGE,\r\n    topNavColor\r\n  };\r\n}\r\n\r\nexport function onHeaderNavColorChange(headerNavColor) {\r\n  return {\r\n    type: HEADER_NAV_COLOR_CHANGE,\r\n    headerNavColor\r\n  };\r\n}\r\n\r\nexport function onMobileNavToggle(mobileNav) {\r\n  return {\r\n    type: TOGGLE_MOBILE_NAV,\r\n    mobileNav\r\n  };\r\n}\r\n\r\nexport function onSwitchTheme(currentTheme) {\r\n  return {\r\n    type: SWITCH_THEME,\r\n    currentTheme\r\n  };\r\n}\r\n","import {\r\n  SIGNIN,\r\n  AUTHENTICATED,\r\n  SIGNOUT,\r\n  SIGNOUT_SUCCESS,\r\n  SHOW_AUTH_MESSAGE,\r\n  HIDE_AUTH_MESSAGE,\r\n  SIGNUP,\r\n  SIGNUP_SUCCESS,\r\n  SHOW_LOADING,\r\n  SIGNIN_WITH_GOOGLE,\r\n  SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nexport const signIn = (user) => {\r\n  return {\r\n    type: SIGNIN,\r\n    payload: user\r\n  }\r\n};\r\n\r\nexport const authenticated = (token) => {\r\n  return {\r\n    type: AUTHENTICATED,\r\n    token\r\n  }\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGNOUT\r\n  };\r\n};\r\n\r\nexport const signOutSuccess = () => {\r\n  return {\r\n    type: SIGNOUT_SUCCESS,\r\n  }\r\n};\r\n\r\nexport const signUp = (user) => {\r\n  return {\r\n    type: SIGNUP,\r\n    payload: user\r\n  };\r\n};\r\n\r\nexport const signUpSuccess = (token) => {\r\n  return {\r\n    type: SIGNUP_SUCCESS,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithGoogle = () => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE\r\n  };\r\n};\r\n\r\nexport const signInWithGoogleAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithFacebook = () => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK\r\n  };\r\n};\r\n\r\nexport const signInWithFacebookAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const showAuthMessage = (message) => {\r\n  return {\r\n    type: SHOW_AUTH_MESSAGE,\r\n    message\r\n  };\r\n};\r\n\r\nexport const hideAuthMessage = () => {\r\n  return {\r\n    type: HIDE_AUTH_MESSAGE,\r\n  };\r\n};\r\n\r\nexport const showLoading = () => {\r\n  return {\r\n    type: SHOW_LOADING,\r\n  };\r\n};\r\n"],"sourceRoot":""}