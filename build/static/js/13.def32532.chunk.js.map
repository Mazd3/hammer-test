{"version":3,"sources":["services/JwtAuthService.js","views/auth-views/components/RegisterForm.js","views/auth-views/authentication/register-1/index.js"],"names":["JwtAuthService","data","fetch","url","method","headers","rules","email","required","message","type","password","confirm","_ref","getFieldValue","validator","rule","value","Promise","reject","resolve","mapDispatchToProps","showAuthMessage","hideAuthMessage","showLoading","authenticated","connect","_ref2","auth","loading","showMessage","token","redirect","props","allowRedirect","form","Form","useForm","history","useHistory","useEffect","push","setTimeout","_jsxs","_Fragment","children","_jsx","motion","div","initial","opacity","marginBottom","animate","Alert","showIcon","layout","name","onFinish","onSignUp","validateFields","then","values","signUp","resp","e","catch","info","console","log","Item","label","hasFeedback","Input","prefix","MailOutlined","className","Password","LockOutlined","Button","htmlType","block","backgroundStyle","backgroundImage","backgroundRepeat","backgroundSize","RegisterOne","theme","useSelector","state","currentTheme","style","Row","justify","Col","xs","sm","md","lg","Card","src","concat","alt","RegisterForm"],"mappings":"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","file":"static/js/13.def32532.chunk.js","sourcesContent":["import fetch from 'auth/FetchInterceptor'\r\n\r\nconst JwtAuthService = {}\r\n\r\nJwtAuthService.login = function (data) {\r\n\treturn fetch({\r\n\t\turl: '/posts',\r\n\t\tmethod: 'post',\r\n\t\theaders: {\r\n      'public-request': 'true'\r\n    },\r\n\t\tdata: data\r\n\t})\r\n}\r\n\r\nJwtAuthService.signUp = function (data) {\r\n\treturn fetch({\r\n\t\turl: '/auth/signup',\r\n\t\tmethod: 'post',\r\n\t\theaders: {\r\n      'public-request': 'true'\r\n    },\r\n\t\tdata: data\r\n\t})\r\n}\r\n\r\nexport default JwtAuthService","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { LockOutlined, MailOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Alert } from \"antd\";\r\nimport { showAuthMessage, showLoading, hideAuthMessage, authenticated } from 'redux/actions/Auth';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\"\r\nimport JwtAuthService from 'services/JwtAuthService'\r\n\r\nconst rules = {\r\n\temail: [\r\n\t\t{ \r\n\t\t\trequired: true,\r\n\t\t\tmessage: 'Please input your email address'\r\n\t\t},\r\n\t\t{ \r\n\t\t\ttype: 'email',\r\n\t\t\tmessage: 'Please enter a validate email!'\r\n\t\t}\r\n\t],\r\n\tpassword: [\r\n\t\t{ \r\n\t\t\trequired: true,\r\n\t\t\tmessage: 'Please input your password'\r\n\t\t}\r\n\t],\r\n\tconfirm: [\r\n\t\t{ \r\n\t\t\trequired: true,\r\n\t\t\tmessage: 'Please confirm your password!'\r\n\t\t},\r\n\t\t({ getFieldValue }) => ({\r\n\t\t\tvalidator(rule, value) {\r\n\t\t\t\tif (!value || getFieldValue('password') === value) {\r\n\t\t\t\t\treturn Promise.resolve();\r\n\t\t\t\t}\r\n\t\t\t\treturn Promise.reject('Passwords do not match!');\r\n\t\t\t},\r\n\t\t})\r\n\t]\r\n}\r\n\r\nexport const RegisterForm = (props) => {\r\n\r\n\tconst { showLoading, token, loading, redirect, message, showMessage, hideAuthMessage, authenticated, allowRedirect } = props\r\n\tconst [form] = Form.useForm();\r\n\tlet history = useHistory();\r\n\r\n\tconst onSignUp = () => {\r\n    \tform.validateFields().then(values => {\r\n\t\t\tshowLoading()\r\n\t\t\tconst fakeToken = 'fakeToken'\r\n\t\t\tJwtAuthService.signUp(values).then(resp => {\r\n\t\t\t\tauthenticated(fakeToken)\r\n\t\t\t}).then(e => {\r\n\t\t\t\tshowAuthMessage(e)\r\n\t\t\t})\r\n\t\t}).catch(info => {\r\n\t\t\tconsole.log('Validate Failed:', info);\r\n\t\t});\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n    \tif (token !== null && allowRedirect) {\r\n\t\t\thistory.push(redirect)\r\n\t\t}\r\n\t\tif(showMessage) {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\thideAuthMessage();\r\n\t\t\t}, 3000);\r\n\t\t}\r\n  });\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<motion.div \r\n\t\t\t\tinitial={{ opacity: 0, marginBottom: 0 }} \r\n\t\t\t\tanimate={{ \r\n\t\t\t\t\topacity: showMessage ? 1 : 0,\r\n\t\t\t\t\tmarginBottom: showMessage ? 20 : 0 \r\n\t\t\t\t}}> \r\n\t\t\t\t<Alert type=\"error\" showIcon message={message}></Alert>\r\n\t\t\t</motion.div>\r\n\t\t\t<Form form={form} layout=\"vertical\" name=\"register-form\" onFinish={onSignUp}>\r\n\t\t\t\t<Form.Item \r\n\t\t\t\t\tname=\"email\" \r\n\t\t\t\t\tlabel=\"Email\" \r\n\t\t\t\t\trules={rules.email}\r\n\t\t\t\t\thasFeedback\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input prefix={<MailOutlined className=\"text-primary\" />}/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item \r\n\t\t\t\t\tname=\"password\" \r\n\t\t\t\t\tlabel=\"Password\" \r\n\t\t\t\t\trules={rules.password}\r\n\t\t\t\t\thasFeedback\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input.Password prefix={<LockOutlined className=\"text-primary\" />}/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item \r\n\t\t\t\t\tname=\"confirm\" \r\n\t\t\t\t\tlabel=\"ConfirmPassword\" \r\n\t\t\t\t\trules={rules.confirm}\r\n\t\t\t\t\thasFeedback\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input.Password prefix={<LockOutlined className=\"text-primary\" />}/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item>\r\n\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" block loading={loading}>\r\n\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Form>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({auth}) => {\r\n\tconst { loading, message, showMessage, token, redirect } = auth;\r\n  return { loading, message, showMessage, token, redirect }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tshowAuthMessage,\r\n\thideAuthMessage,\r\n\tshowLoading,\r\n\tauthenticated\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterForm)\r\n","import React from 'react'\r\nimport RegisterForm from '../../components/RegisterForm'\r\nimport { Card, Row, Col } from \"antd\";\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst backgroundStyle = {\r\n\tbackgroundImage: 'url(/img/others/img-17.jpg)',\r\n\tbackgroundRepeat: 'no-repeat',\r\n\tbackgroundSize: 'cover'\r\n}\r\n\r\nconst RegisterOne = props => {\r\n\tconst theme = useSelector(state => state.theme.currentTheme)\r\n\treturn (\r\n\t\t<div className=\"h-100\" style={backgroundStyle}>\r\n\t\t\t<div className=\"container d-flex flex-column justify-content-center h-100\">\r\n\t\t\t\t<Row justify=\"center\">\r\n\t\t\t\t\t<Col xs={20} sm={20} md={20} lg={7}>\r\n\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t<div className=\"my-2\">\r\n\t\t\t\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t\t\t<img className=\"img-fluid\" src={`/img/${theme === 'light' ? 'logo.png': 'logo-white.png'}`} alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t<p className=\"text-muted\">Create a new account:</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<Row justify=\"center\">\r\n\t\t\t\t\t\t\t\t\t<Col xs={24} sm={24} md={20} lg={20}>\r\n\t\t\t\t\t\t\t\t\t\t<RegisterForm {...props}/>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default RegisterOne\r\n"],"sourceRoot":""}